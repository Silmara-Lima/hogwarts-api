generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- RESOURCE 1: HOUSE (Casa) ---
model House {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  mascot      String?
  founder     String?
  
  characters  Character[] // Relação 1-para-N: Uma Casa tem muitos Personagens
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// --- RESOURCE 2: SUBJECT (Matéria) ---
model Subject {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  professor   String?
  
  enrollments Enrollment[] 
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// --- RESOURCE 3: CHARACTER (Personagem) ---
model Character {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  role        String   @default("student")
  bloodStatus String?

  // Chave estrangeira para House
  houseId     Int?       
  house       House?   @relation(fields: [houseId], references: [id]) 
  
  enrollments Enrollment[] 
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Tabela intermediária N:M (Personagem -> Matéria) Um personagem pode ter várias matérias
model Enrollment {
  id          Int       @id @default(autoincrement())
  grade       Decimal?  @db.Decimal(3, 1)
  
  characterId Int
  character   Character @relation(fields: [characterId], references: [id])

  subjectId   Int
  subject     Subject   @relation(fields: [subjectId], references: [id])

  @@unique([characterId, subjectId])
}
